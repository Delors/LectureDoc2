.ld-extracted-exercise {
    font-size: var(--extracted-exercises-font-size);
    line-height: var(--extracted-exercises-line-height);
}

/* Used for supplemental information that is rendered outside of a slide; i. e.,
   in the document view. */
   .supplemental {
    font-size: var(--supplemental-font-size);
    line-height: var(--slide-line-height);
}

/*  Rendering of the slide numbers.    
*/
.ld-document-view-slide-number {
    bottom: 0px;
    right: 5px;
    font-size: 18px;
    /* We want to ensure that the number is always readable: */
    color: rgb(25, 25, 25);
    text-shadow: 1px 1px 1px white;
}


/*  Styling of supplemental information.

    Each slide can only have one block with supplemental information. The 
    supplemental information is placed differently in the DOM in the different 
    views.
    
    In the document view the supplemental information element is moved below
    the element for the slide:
    
        <div class="ld-slide">...</>
        <div|aside class="supplemental">...</>
*/

.ld-document-view-slide-pane {

    &:not(:has(+.supplemental)) {
        margin-bottom: 2px;
    }

    &:has(+.supplemental) .ld-slide {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }

    +.supplemental {
        margin-bottom: 2px;
        border-top: 1px dashed #333;
        padding: calc(var(--slide-lr-padding) * var(--ld-document-view-zoom-level));

        border-radius:
            0 0 calc(var(--slide-border-radius) * var(--ld-document-view-zoom-level)) calc(var(--slide-border-radius) * var(--ld-document-view-zoom-level));
        box-shadow: none;
        
        font-size: var(--supplemental-font-size);

        background-color: var(--slide-background-color);
    }
}

#ld-document-view-pane .ld-exercise-solution[data-encrypted] {
    display: none;
}

.ld-extracted-exercise {
    background-color: white;
    padding:
        calc(var(--ld-document-view-zoom-level) * var(--slide-tb-padding)) calc(var(--ld-document-view-zoom-level) * var(--slide-lr-padding)) calc(var(--ld-document-view-zoom-level) * var(--slide-tb-padding)) calc(var(--ld-document-view-zoom-level) * var(--slide-lr-padding));
    border-radius: calc(var(--slide-border-radius) * var(--ld-document-view-zoom-level)) calc(var(--slide-border-radius) * var(--ld-document-view-zoom-level));
    margin-bottom: 2px;
}

@media print {
    .ld-extracted-exercise {
        page-break-before: always;
    }

    .ld-extracted-exercise .ld-exercise-solution-wrapper {
        display: none;
    }
}

.ld-extracted-exercise input {
    width: 100%;
    font-size: var(--extracted-exercises-font-size);
    border: 1px solid var(--dhbw-light-gray);
    padding: 0.5em;
    box-shadow: var(--br-shadow);
    border-radius: 0.5em;
}


#ld-document-view-pane {

    @media screen {
        .ld-slide.not-covered-topics {
            background-color: black;
            color: var(--dhbw-gray);
        }
    }

    @media print {
        .ld-slide.not-covered-topics {
            text-shadow: 2px 2px 4px black, -2px -2px 4px black;
            color: white;
        }
    }
}



#ld-document-view-pane .stack {

    /* Unfortunately, the final positioning needs to be done in JavaScript! 
    .layer {  
        position: absolute;  for all layers, unless the next layer is not an overlay layer.
        position: relative;  for a non-overlay layer following an overlay layer.
    }
    */

    display: flex;
    flex-direction: column;

    .layer {
        @media print {
            page-break-inside: avoid;
        }
    }
}
