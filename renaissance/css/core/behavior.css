/* LAYER: behavior (THE TOP PRIORITY LAYER) */

/* 
    This file in combination with the imported css files represent the 
    very core of LectureDoc's css. It primarily defines css properties 
    directly related to the core functionality of LectureDoc. I.e., how slides 
    as a whole are layout in the different modes. The CSS classes defined in 
    this file are (often) used by LectureDoc. Hence, any changes here, may 
    require code changes in other CSS and/or JavaScript files.
    
    Styling related to the content of slides is defined elsewhere.

    ____________________________________________________________________________

    _______       Any changes here, will likely break LectureDoc!        _______

    ____________________________________________________________________________
*/


@import url(document-view.css);
@import url(slides-view.css);
@import url(light-table.css);

/*  ----------------------------------------------------------------------------

    Classes with special meaning for LectureDoc. 
*/

/*  

.incremental
_______________

Elements marked with the class "incremental" are rendered one-step-after-another.

*/


/*

.code.copy-to-clipboard div.ld-copy-to-clipboard-button 
___________________________________

LectureDoc has special support for enabling copy to clipboard functionality. 
If a code block (i.e., a DIV or PRE element with the class "code" and also 
"copy-to-clipboard") is found, LectureDoc will add a copy "button" to the code
block by means of a div with the class ld-copy-to-clipboard-button.

Example:
<div class="code copy-to-clipboard">
    <div class="ld-copy-to-clipboard-button">Copy</div> <!-- added by LectureDoc -->
    <pre><code>...</code></pre>
</div>

or

<pre class="code copy-to-clipboard">
    <div class="ld-copy-to-clipboard-button">Copy</div> <!-- added by LectureDoc -->
    <code>...</code>
</pre>

.code.copy-to-clipboard div.ld-copy-to-clipboard-button 

*/


/*

.stack and .layer (.overlay) 
_______________________________

LectureDoc has special support for creating stack based layouts.

*/



